macro_rules! impl_op {
	( $trait:ident, $type:ty, $body:block ) => {
		impl<T> $trait<$type> for $type 
			where T: $trait<T, Output=T> 
			{
			    type Output = $type;
				fn add(self, r : $type) { $body }
			}
	};
}


use std::ops:: { Add };

struct Vec2<T> {
    x: T,
    y: T,
}

impl_op!{ Add, Vec2<T>, { 
        Vec2::<T> { self.x + r.x, self.y + r.y, }
    }
}

fn main() {
    
    
    
}